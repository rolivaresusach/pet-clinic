pool:
  vmImage: ubuntu-latest
stages:
- stage: Build 
  jobs:
  - job: build
    displayName: 'Build'
    steps:
    - task: Gradle@3
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'build'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        sonarQubeRunAnalysis: false
        spotBugsAnalysis: false

    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        contents: |
            **/build/libs/*.jar
        targetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: appJar
        publishLocation: 'Container'

#- job: horusec
#  workspace:
#    clean: all
#  displayName: Horusec
#  steps:
#    - script: |
#        curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest
#        horusec start -p ./src   
- stage: Test 
  jobs:
  - job: sonar
    workspace:
      clean: all
    displayName:  Code Review
    steps:
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'SonarDevSecOps'
          organization: 'cl-usach-diplomados-rolivares'
          projectKey: 'devsecops-foundation-rolivares'
          projectName: 'devsecops-foundation-rolivares'
        displayName: 'Preparing Sonarqube Environment'
    
      - task: Gradle@3
        inputs:
          gradleWrapperFile: 'gradlew'
          tasks: "sonarqube"
          javaHomeOption: 'JDKVersion'
          sonarQubeRunAnalysis: true
          sqGradlePluginVersionChoice: 'specify'
          sonarQubeGradlePluginVersion: '3.3'
        displayName: 'Analyze current Branch'
    
  
      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'
        displayName: 'Publish Analysis Results'

  - job: sca
    steps:
     - task: dependency-check-build-task@6
       inputs:
         projectName: 'pet-clinic'
         scanPath: '$(Pipeline.Workspace)'
         format: 'HTML'
       displayName: SCA

- stage: Deploy 
  jobs:  
  - job: buildimage
    displayName:  Build Image
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'appJar'
        downloadPath: '$(Pipeline.Workspace)'
      displayName: Descarga Jar
    
    - script: "mkdir -p build/libs; mv $(Pipeline.Workspace)/appJar/build/libs/ build/; chmod -R 555 build/libs"  
      displayName:  Se mueve JAR a carpeta raiz
    
    #- script: | 
      # sudo apt-get install -y rpm
      # wget https://github.com/aquasecurity/trivy/releases/download/v0.27.1/trivy_0.27.1_Linux-64bit.deb
      # sudo dpkg -i trivy_0.27.1_Linux-64bit.deb
      # trivy config $(Pipeline.Workspace)
      #displayName: Kubernetes YAML Scan

    - task: Docker@2
      inputs:
        containerRegistry: 'DockerRolivares'
        command: 'login'
    
    - task: Docker@2
      inputs:
        containerRegistry: 'DockerRolivares'
        repository: 'devsecops'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          latest
          $(Build.BuildId)
